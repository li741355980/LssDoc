1 hi			
	匹配hi字符				
	him Hi hI history
2 \bhi\b
	匹配单词hi		
	\b代表着单词的开头或结尾，也就是单词的分界处          
3          

表1.常用的元字符
代码	说明
.	匹配除换行符以外的任意字符
\w	匹配字母或数字或下划线或汉字
\s	匹配任意的空白符
\d	匹配数字
\b	匹配单词的开始或结束
^	匹配字符串的开始
$	匹配字符串的结束

表2.常用的限定符
代码/语法	说明
*	重复零次或更多次
+	重复一次或更多次
?	重复零次或一次
{n}	重复n次
{n,}	重复n次或更多次
{n,m}	重复n到m次

表3.常用的反义代码
代码/语法	说明
\W	匹配任意不是字母，数字，下划线，汉字的字符
\S	匹配任意不是空白符的字符
\D	匹配任意非数字的字符
\B	匹配不是单词开头或结束的位置
[^x]	匹配除了x以外的任意字符
[^aeiou]	匹配除了aeiou这几个字母以外的任意字符


[aeiou]   匹配方括号中的任意一个字符
[a-z0-9A-Z_] 范围匹配加上-连字符 这个匹配等同于\w
[0-9]        这个等同于\d


 例如：
	\bhi\b.*\bLucy\b 单词hi后跟着单词Lucy，.*连在一起就意味着任意数量的不包含换行的字符
	^0\d{2}-\d{8}$      0后面两个数字加-8个数字
	^\d{5,12}$    5到12连续位数字
        
转义字符
匹配元字符前面加上正斜杠
 \\ \*

	\(?0\d{2}[) -]?\d{8}  （是元字符，需要加上转义字符\，这个表达式匹配 (010)00000000 (010-00000000 为了正确匹配需要使用分支条件


分枝条件
指的是有几种规则，如果满足其中任意一种规则都应该当成匹配，具体方法是用|把不同的规则分隔开

0\d{2}-\d{8}|0\d{3}-\d{7}   两个规则匹配的或集，从左到右依次匹配规则
\d{5}-\d{4}|\d{5}与\d{5}|\d{5}-\d{4}两个规则并不相同，原因是顺序匹配的话，那么00000-0000只会成功匹配00000而不会匹配00000-0000，因为最左边的规则匹配成功后面的规则不会使用了

分组（）的使用

（）里面的整体是一个分组，(ab)+匹配一个ab重复1到无数次的字符串

	(\d{1,3}\.){3}\d{1,3}简单的IP地址匹配表达式
        这个IP表达式匹配256.300.888.999这种不可能存在的IP地址，但是正则表达式中并不提供关于数学的任何功能，所以只能使用冗长的分组
	正确匹配
	((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)


后向引用

	1 小括号指定的组会有一个组号，可以自己指定(?<name>exp)，自己不指定会自动指定，可以取消指定(?:exp)从左到右，第一个为1第二个为2，类推
	2 子表达式的文本匹配成功后就会将内容捕获到分组，后面可以直接引用这个内容

\b(\w+)\b\s+\1\b 匹配 go go  或者hello hello这样重复单词，\b(\w+)\b匹配一个单词到默认分组1中，\1引用这个内容


表4.常用分组语法
分类	代码/语法	说明
捕获	(exp)	匹配exp,并捕获文本到自动命名的组里
	(?<name>exp)	匹配exp,并捕获文本到名称为name的组里，也可以写成(?'name'exp)
	(?:exp)	匹配exp,不捕获匹配的文本，也不给此分组分配组号

零宽断言(?=exp)	匹配exp前面的位置
	(?<=exp)	匹配exp后面的位置
	(?!exp)	匹配后面跟的不是exp的位置
	(?<!exp)	匹配前面不是exp的位置

注释	(?#comment)	这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读

\b(?<Word>\w+)\b\s+\k<Word>\b上面例子的命名版本


断言（断言是个位置匹配，表示某个表达式的前面或者后面是一个什么形式的表达式）

(?=exp) 先行断言 \b\w+(?=ing\b)      某个字符串后缀是ing\b   查找I'm singing while you're dancing.时，它会匹配sing和danc。
(?<=exp) 后发断言  （?<=\bre）\w+\b  某个字符串前缀是\bre    reading a book时，它匹配ading

(?!exp)  负向先行断言 \d{3}(?!\d)     一个三位数字 后缀 不是数字的字符
(?<!exp) 负向后发断言 (?<![a-z])\d{7} 一个七位数字 前缀 不是a-z的字符

(?<=<(\w+)>).*(?=<\/\1>)

解释
(?<=		#文本的前缀是一个尖括号里面有\w+的表达式
	<(\w+)>
)
.*
(?=
	<\/\1>	#文本的后缀是一个尖括号里面有\/\1的表达式 
)
匹配一个XML解析的一个元数据    <name>fhdksfhksf</name>匹配fhdksfhksf


\b((?!abc)\w)+\b
解释
\b             #字符串开始
(             
	(?!abc) #后缀不是abc这个字符串
\w           
)+\b

#匹配不包含连续字符串abc的单词